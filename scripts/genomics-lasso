#!/usr/bin/env python 
import sys
sys.path.append("../src/")
import numpy as np
import argparse
import utils
import bmu
from sklearn.linear_model import Lasso
import re 


def run_lasso(args):

  data, samples, features = bmu.load_biom(args.input_file)
  map_data = bmu.load_map(args.map_file)
  labels, label_map = utils.label_formatting(map_data, samples, args.label, signed=True)
  samples = np.array(samples)
  features = np.array(features)

  mdl = Lasso(alpha=.25, fit_intercept=True, normalize=False, precompute='auto', 
              copy_X=False, max_iter=5000, tol=0.0001, warm_start=False, positive=False)
  mdl.fit(X=data, y=labels)
  
  f = open(args.output_file, "wb")
  dels = re.compile('"| |\[|\]') 
  for i in np.argsort(np.abs(mdl.coef_))[::-1][:args.select]:
    f.write(dels.sub("", features[i])+"\n")
  f.close()

def main():
  parser = parser_build()
  args = parser.parse_args()
  run_lasso(args)
  return None 

def parser_build():
  parser = argparse.ArgumentParser(
    description="Implement Lasso on metagenomic data."
  )
  parser.add_argument("-l", "--label", 
    help="name of column of the mapping file that "
      +"indicates the labels",
    required=True)
  parser.add_argument("-n", "--select", 
    type=int, 
    help="number of features to select", 
    default=15)
  parser.add_argument("-i", "--input-file", 
    help="biom format file", 
    required=True)
  parser.add_argument("-m", "--map-file", 
    help="map file (tsv)", 
    required=True)
  parser.add_argument("-o", "--output-file", 
    help="output file where selected OTU IDs and averages of the OTUS for each class"
    +"are stored", 
    required=True)
  return parser

if __name__ == "__main__":
  main()
